<div class="sidebar-left">
  <div class="sidebar">

    <!-- Chat Sidebar area -->
    <div class="sidebar-content">
      <span class="sidebar-close-icon">
        <i data-feather="x"></i>
      </span>
      <!-- Sidebar header start -->
      <div class="chat-fixed-search">
        <div class="d-flex align-items-center w-100">
          <div class="sidebar-profile-toggle">
            <div class="avatar avatar-border">
              <img src="<%= adminData?.image ? adminData?.image : '../../../app-assets/images/portrait/small/avatar-s-11.jpg' %>" alt="user_avatar" height="42" width="42" />
              <span class="avatar-status-online"></span>
            </div>
          </div>
          <div class="input-group input-group-merge ms-1 w-100">
            <span class="input-group-text round"><i data-feather="search" class="text-muted"></i></span>
            <input type="text" class="form-control round" id="chat-search" placeholder="Search or start a new chat" aria-label="Search..." aria-describedby="chat-search" />
          </div>
        </div>
      </div>
      <!-- Sidebar header end -->

      <!-- Sidebar Users start -->
      <div id="users-list" class="chat-user-list-wrapper list-group">
        <h4 class="chat-list-title">Chats</h4>

      </div>
      <!-- Sidebar Users end -->
    </div>
    <!--/ Chat Sidebar area -->

  </div>
</div>
<div class="content-right">
  <div class="content-wrapper container-xxl p-0">
    <div class="content-header row">
    </div>
    <div class="content-body">
      <div class="body-content-overlay"></div>
      <!-- Main chat area -->
      <section class="chat-app-window">

        <!-- Active Chat -->
        <div class="active-chat ">
          <!-- Chat Header -->
          <div class="chat-navbar">
            <header class="chat-header">

            </header>
          </div>
          <!--/ Chat Header -->

          <!-- User Chat messages -->
          <div class="user-chats">
            <div class="chats">

            </div>
          </div>
          <!-- User Chat messages -->

          <!-- Submit Chat form -->
          <form class="chat-app-form" action="javascript:void(0);" onsubmit="enterChat();">

          </form>
          <!--/ Submit Chat form -->
        </div>
        <!--/ Active Chat -->
      </section>
      <!--/ Main chat area -->

    </div>
  </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.3/socket.io.js"></script>
<script>
  let host_name = window.location.hostname;
  let url = `http://${host_name}:4060/`
  let socket = io(url)
  let adminId = '<%=adminData._id%>'
  // console.log("Admin",adminId);
  let data = {
    userId: adminId,
    type: 0
  }
  socket.emit("connect_user", data);
  socket.on("connect_listener", data => {});
  let sendData = {
    senderId: adminId
  }
  socket.emit("get_message_list", sendData);
  socket.on("get_message_list", response => {
    // console.log(response, ">>>>>>>>>response>>>>>>>>>>>>");
    let html11 = ``;
    let role
    let a, name, profile
    for (let i = 0; i < response.length; i++) {
      // console.log(response[i].receiverId,">>>>>>>>>response[i].receiverId");
      // a = response[i]?.receiverId?.role
      // role = a == 1 ? "subAdmin" : a == 2 ? "Patient" : "Doctor"
      // console.log("response[i].receiverId._id",response[i].lastMessageId);
      if (response[i]?.receiverId?._id != adminId) {
        name = response[i].receiverId?.firstName + ' ' + response[i].receiverId?.lastName;
        profile = response[i].receiverId?.image;
      } else {
        name = response[i].senderId?.firstName + ' ' + response[i].senderId?.lastName;
        profile = response[i].senderId?.image;
      }
      let msgList
      if (response[i].lastMessageId.messageType === 1) {
        msgList = "Image"
      } else {
        msgList = response[i].lastMessageId.message
      }
      const dateObj = new Date(response[i].lastMessageId.createdAt);
      // const formattedDate = dateObj.toLocaleString(); 
      const options = {
        hour: '2-digit',
        minute: '2-digit',
        hour12: true
      };
      const formattedTime = dateObj.toLocaleTimeString('en-US', options);
      html11 += `
            <ul class="chat-users-list chat-list media-list">
            <li id="${response[i]?._id}" onclick="getMessage('${response[i]?.senderId?._id}','${response[i]?.receiverId?._id}')">
              <span class="avatar"><img src="${profile}" height="42" width="42" alt="Generic placeholder image" />
              </span>
              <div class="chat-info flex-grow-1">
                <h5 class="mb-0">${name}</h5>
                <p class="card-text text-truncate">
                  ${msgList}
                </p>
              </div>
              <div class="chat-meta text-nowrap">
                <small class="float-end mb-25 chat-time">${formattedTime}</small>
              </div>
            </li>
            
            <li class="no-results">
              <h6 class="mb-0">No Chats Found</h6>
            </li>
          </ul>  
            `
    }

    $("#users-list").append(html11);
  });

  function getMessage(senderId, receiverId) {
    let getData = {
      senderId: senderId,
      receiverId: receiverId
    }
    socket.emit("read_message", getData);
    socket.emit("get_messages", getData);
    $(".chat-header").empty();
  }

  socket.on("get_messages", result => {
    $("#users-list li").off("click");
    $(".chats").empty();
    $(".chat-header").empty();
    $(".chat-app-form").empty();
    scrollToBottom();
    let html1 = ''
    let name = ''
    let role
    let a, profile
    if (result.senderDetails?.senderId?._id == adminId) {
      a = result?.senderDetails?.receiverId?.role
      name = result.senderDetails?.receiverId?.firstName + ' ' + result.senderDetails?.receiverId?.lastName
      // role = a == 1 ? "subAdmin" : a == 2 ? "Patient" : "Doctor"
      profile = result.senderDetails?.receiverId?.image
    } else {
      a = result?.senderDetails?.senderId?.role
      // role = a == 1 ? "subAdmin" : a == 2 ? "Patient" : "Doctor"
      name = result.senderDetails?.senderId?.firstName + ' ' + result.senderDetails?.senderId?.lastName;
      profile = result.senderDetails?.senderId?.image
    }
    html1 += `
                <div class="d-flex align-items-center">
                  <div class="sidebar-toggle d-block d-lg-none me-1">
                    <i data-feather="menu" class="font-medium-5"></i>
                  </div>
                  <div class="avatar avatar-border user-profile-toggle m-0 me-1">
                    <img src="${profile}" alt="avatar" height="36" width="36" />
                  </div>
                  <h6 class="mb-0">${name}</h6>
                </div>
                `
    $(".chat-header").append(html1);
    scrollToBottom();
    let html2 = ''
    for (let i = 0; i < result.getAllOldMessage.length; i++) {
      let messageContent;
      if (result.getAllOldMessage[i].messageType === 1) {
        messageContent = `<img src="${result.getAllOldMessage[i].message}" alt="image" class="chatimg" />`;
      } else {
        messageContent = `<p>${result.getAllOldMessage[i].message}</p>`;
      }
      // console.log("result.getAllOldMessage[i].senderId",result.getAllOldMessage[i]);
      if (result.getAllOldMessage[i].senderId == adminId) {
        html2 += `
                        <div class="chat">
                          <div class="chat-avatar">
                            <span class="avatar box-shadow-1 cursor-pointer">
                              <img src="<%= adminData.image%>" alt="avatar" height="36" width="36" />
                            </span>
                          </div>
                          <div class="chat-body">
                            <div class="chat-content">
                              <p>${messageContent}</p>
                            </div>
                          </div>
                        </div>
                    `
      } else {
        html2 += `
                        <div class="chat chat-left">
                  <div class="chat-avatar">
                    <span class="avatar box-shadow-1 cursor-pointer">
                      <img src="${profile}" alt="avatar" height="36" width="36" />
                    </span>
                  </div>
                  <div class="chat-body">
                    <div class="chat-content">
                      <p>${messageContent}</p>
                    </div>
                  </div>
                </div>
                        `
      }
    }
    $(".chats").append(html2);

    $(".chat-app-form").append(`
              <div class="input-group input-group-merge me-1 form-send-message" id="sendMsg">
                  <span class="speech-to-text input-group-text"><i data-feather="mic" class="cursor-pointer"></i></span>
                  <input type="text" class="form-control message" id="msgInput" placeholder="Type your message..." autofocus 
                    onkeydown="handleKeyPress(event, '${result.senderDetails?.senderId?._id}', '${result?.senderDetails?.receiverId?._id}')" />
                    <span class="input-group-text">
                <label for="image-file" class="attachment-icon form-label mb-0">
                  <i class="ph-fill ph-image fs-4"></i>
                  <input type="file" class="visually-hidden" id="image-file" accept="image/*" onchange="previewImage(event)"/> </label></span>
          </div>
          <div id="image-preview" class="mb-1" style="display:none"></div>
              <button type="button" class="btn btn-primary send" onclick="sendMessage('${result.senderDetails?.senderId?._id}','${result?.senderDetails?.receiverId?._id}')">
                  <i data-feather="send" class="d-lg-none"></i>
                  <span class="d-none d-lg-block">Send</span>
              </button>
                  
            `);
  });


  function handleKeyPress(event, sender, receiver) {
    if (event.key === "Enter") {
      // console.log('Enter key pressed. Sending message...');
      sendMessage(sender, receiver);
      event.preventDefault();
      scrollToBottom();
    }
  }
  socket.on("send_message", (response) => {
    // console.log(response, ">>>>>>>>>>>>response");
    scrollToBottom();
    if (response.senderId === '<%=adminData._id%>') {
      appendMessage(response.senderId, response.message, response.messageType);
    } else {
      appendMessage1(response.senderId, response.message, response.messageType, response.receiverId.image);
    }
  });

  async function sendMessage(senderId, receiverId) {
    let msgInput;
    var photo = document.getElementById("image-file").files[0];
    var msgInputs = document.getElementById("msgInput").value.trim();

    if (!photo && msgInputs === '') {
      return;
    }
    if (photo) {
      let formData = new FormData();
      formData.append("image", photo);

      let response = await fetch("/api/imageUpload", {
        method: "POST",
        headers: {
          "secret_key": "U2FsdGVkX1+dBGJMQLVm7gikR8qDZEjCTRZa6AALPf/QJDHZEm7SYytvmEP0ROoG",
          "publish_key": "U2FsdGVkX1+ggQPGHAF4EKnOx1GNHFGihc5CSpAXQHo95VhS3o24JJ/uE1d5zjmf"
        },
        body: formData
      });
      const data = await response.json();
      msgInput = data.body.image;
    } else {
      msgInput = msgInputs
    }

    let data = {
      receiverId: receiverId != '<%=adminData._id%>' ? receiverId : senderId,
      senderId: '<%=adminData._id%>',
      messageType: photo ? 1 : 0,
      message: msgInput
    };
    socket.emit("send_message", data);
    document.getElementById("msgInput").value = '';
    document.getElementById("image-file").value = '';
    removeImage();
    document.getElementById('image-preview').style.display = 'none';

  }
  function appendMessage(senderId, message, messageType) {
    let messageContent;
    if (messageType === 1) {
      messageContent = `<img src="${message}" alt="image" class="chatimg" />`;
    } else {
      messageContent = `<p>${message}</p>`;
    }
    let html = `
            <div class="chat">
                <div class="chat-avatar">
                    <span class="avatar box-shadow-1 cursor-pointer">
                      <img src="<%= adminData.image%>" alt="avatar" height="36" width="36"/>
                    </span>
                </div>
                <div class="chat-body">
                    <div class="chat-content">
                      ${messageContent}
                    </div>
                </div>
            </div>
            `
    $(".chats").append(html);
    scrollToBottom()
  }

  function appendMessage1(senderId, message, messageType, image) {
    let messageContent;
    if (messageType === 1) {
      messageContent = `<img src="${message}" alt="image" class="chatimg" />`;
    } else {
      messageContent = `<p>${message}</p>`;
    }
    let html = `
    <div class="chat chat-left">
                  <div class="chat-avatar">
                      <span class="avatar box-shadow-1 cursor-pointer">
                        <img src="${image}" alt="avatar" height="36" width="36" />
                      </span>
                  </div>
                  <div class="chat-body">
                      <div class="chat-content">
                        ${messageContent}
                      </div>
                  </div>
              </div>
              `
    $(".chats").append(html);
    scrollToBottom()
  }

  function scrollToBottom() {
    $('.user-chats').animate({
      scrollTop: 9999
    }, 'slow');
    // var chatBody = document.getElementById('chat-down');
    // chatBody.scrollTop = chatBody.scrollHeight;
    // console.log("Scrolled to bottom");
  }

  function previewImage(event) {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        const imagePreview = document.getElementById("image-preview");
        imagePreview.innerHTML = `
        <div class="image-preview-container">
          <img src="${e.target.result}" alt="Image Preview" class="image-preview" style="max-width: 200px; max-height: 200px; margin-bottom: 10px;" />
          <button class="remove_image" onclick="removeImage()"><i class="ph-duotone ph-x-circle"></i></button>
        </div>
      `;
      };
      reader.readAsDataURL(file);
    }
    document.getElementById('image-preview').style.display = 'block';
  }

  function removeImage() {
    const imagePreview = document.getElementById("image-preview");
    imagePreview.innerHTML = '';
    document.getElementById("image-file").value = '';
    document.getElementById('image-preview').style.display = 'none';
  }
</script>